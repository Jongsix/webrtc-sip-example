---
- name: Install dependencies
  apt:
    name: ['python-apt', 'binutils-dev', 'bison', 'build-essential', 'doxygen', 'flex', 'freetds-dev', 'libasound2-dev', 'libbluetooth-dev', 'libcfg-dev', 'libcorosync-common-dev', 'libcpg-dev', 'libcurl4-openssl-dev', 'libedit-dev', 'libfftw3-dev', 'libical-dev', 'libjack-jackd2-dev', 'libjansson-dev', 'libldap2-dev', 'liblua5.2-dev', 'libmysqlclient-dev', 'libneon27-dev', 'libnewt-dev', 'libogg-dev', 'libpopt-dev', 'libpq-dev', 'libsndfile1-dev', 'libsnmp-dev', 'libspeex-dev', 'libspeexdsp-dev', 'libsqlite3-dev', 'libssl-dev', 'libunbound-dev', 'libvorbis-dev', 'libxml2-dev', 'libxslt1-dev', 'pkg-config', 'python-dev', 'unixodbc-dev', 'uuid-dev', 'zlib1g-dev', 'graphviz', 'libc-client2007e-dev', 'libcodec2-dev', 'libgmime-2.6-dev', 'libgsm1-dev', 'libiksemel-dev', 'libosptk-dev', 'libradcli-dev', 'libresample1-dev', 'libspandsp-dev', 'libsrtp0-dev', 'libsrtp2-dev', 'liburiparser-dev', 'libvpb-dev', 'pkgconf', 'portaudio19-dev', 'subversion', 'xmlstarlet'] 
    state: present
    update_cache: yes    

- name: download Asterisk 16
  get_url:
    url: http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-16-current.tar.gz
    dest: /tmp/

- name: untar Asterisk
  unarchive:
    src: /tmp/asterisk-16-current.tar.gz
    dest: /tmp/
    remote_src: yes

- name: remove compressed file
  file:
    path: /tmp/asterisk-16-current.tar.gz
    state: absent

- name: get the name of asterix folder
  find:
    file_type: directory
    paths: /tmp/
    pattern: "asterisk-*"
  register: asterix_folder

- name: Debug 
  debug:
    msg: "{{ asterix_folder }}"

- name: Configure ansible
  shell: ./configure --with-pj-project-bundled
  args:
    chdir: "{{ asterix_folder.files[0].path }}"

- name: Build Asterisk
  make:
    chdir: "{{ asterix_folder.files[0].path }}"

- name: Install Asterisk
  make:
    chdir: "{{ asterix_folder.files[0].path }}"
    target: install

- name: Generate Init services for Asterisk
  make:
    chdir: "{{ asterix_folder.files[0].path }}"
    target: config

- name: Generate samples for Asterisk
  make:
    chdir: "{{ asterix_folder.files[0].path }}"
    target: samples

- name: Enable Asterix
  systemd:
    enabled: yes
    name: asterisk

- name: Start Asterix
  systemd:
    state: started
    name: asterisk
